name: build

on:
  workflow_dispatch:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
    
permissions:
  contents: read
  statuses: write

jobs:
  config:
    name: "Config"
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Get tag message
        id: get-tag-message
        run: |
            TAG_MESSAGE=$(git for-each-ref --format='%(contents)' $(git rev-parse --symbolic-full-name ${GITHUB_REF}))
            echo "tag_message=$TAG_MESSAGE" >> "$GITHUB_OUTPUT"
    
  build:
    name: "Build project"
    runs-on: ubuntu-latest
    needs: config
    strategy:
        matrix:
          include:
            - {goos: "linux", goarch: "386"}
            - {goos: "linux", goarch: "amd64"}
            - {goos: "linux", goarch: "arm64"}

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22
      
      - name: Build the project
        id: build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
            GOOS=${{ matrix.goos }}
            GOARCH=${{ matrix.goarch }}
            output_name="test-release-${GOOS}-${GOARCH}"
            go get .
            go build -o $output_name .
            echo "artifact=$output_name" >> "$GITHUB_OUTPUT"
    
      - name: Archive the artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.artifact }}
          path: ${{ steps.build.outputs.artifact }}
